{"version":3,"file":"static/webpack/static/development/pages/account/add-user.js.d155211933562e517503.hot-update.js","sources":["webpack:///./components/CreateUserForm.js"],"sourcesContent":["import Form from './styles/Form';\nimport Btn from './styles/Btn';\nimport isEmpty from '../lib/isEmpty';\n\nconst CreateUserForm = props => (\n  <CreateUserStyles>\n    <Form\n      id=\"new_user_info\"\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        this.validateForm();\n\n        if (!errorMessage) {\n          const res = await createUser();\n          this.resetState(e);\n        }\n      }}\n    >\n      <fieldset disabled={loading} aria-busy={loading}>\n        <h4>Add New User</h4>\n        <div className=\"form-body\">\n          <div className=\"form-section\">\n            <h5>User Information</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"firstName\">\n                  <p>First Name</p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.firstName ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.firstName && errorMessage.firstName}\n                </p>\n              </div>\n              <div className=\"row-half\">\n                <label htmlFor=\"lastName\">\n                  <p>\n                    Last Name <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"username\">\n                  <p>Username</p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.username ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.username && errorMessage.username}\n                </p>\n              </div>\n\n              <div className=\"row-half\">\n                <label htmlFor=\"company\">\n                  <p>\n                    Company <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"company\"\n                  name=\"company\"\n                  value={this.state.company}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"email\">\n                  <p>\n                    Email Address <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h5>Permissions</h5>\n            <div className=\"form-row info permissions\">\n              <div\n                className={`row-full ${\n                  errorMessage.permissions ? 'error' : ''\n                }`}\n              >\n                <label htmlFor=\"customerPermissions\">\n                  Customer\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"customerPermissions\"\n                    value=\"CUSTOMER\"\n                    checked={this.state.permissions === 'CUSTOMER' && 'checked'}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"employeePermissions\">\n                  Employee\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"employeePermissions\"\n                    checked={this.state.permissions === 'EMPLOYEE' && 'checked'}\n                    value=\"EMPLOYEE\"\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"adminPermissions\">\n                  Administrator\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"adminPermissions\"\n                    checked={this.state.permissions === 'ADMIN' && 'checked'}\n                    value=\"ADMIN\"\n                    onChange={this.handleChange}\n                  />\n                </label>\n              </div>\n              <p className=\"error\">\n                {errorMessage.permissions && errorMessage.permissions}\n              </p>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full can-order\">\n                <label htmlFor=\"canOrder\">\n                  <p>Is this user allowed to create their own order?</p>\n                </label>\n                <input\n                  id=\"canOrder\"\n                  name=\"canOrder\"\n                  type=\"checkbox\"\n                  checked={this.state.canOrder === true && 'checked'}\n                  onChange={this.handleCheckbox}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* TODO: check privileges ?? */}\n\n          <div className=\"form-section\">\n            <h5>Contact Information</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"phone\">\n                  <p>\n                    Phone Number <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={this.state.phone}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"address\">\n                  <p>\n                    Street Address <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h5>Password</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"password\">\n                  <p>\n                    {this.props.action === 'update' ? 'New ' : ''}\n                    Password\n                  </p>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.password ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.password && errorMessage.password}\n                </p>\n              </div>\n              <div className=\"row-half\">\n                <label htmlFor=\"confirmPassword\">\n                  <p>Confirm Password</p>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.confirmPassword ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.confirmPassword && errorMessage.confirmPassword}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-footer\">\n          <Btn\n            type=\"submit\"\n            id=\"createUser\"\n            name=\"createUser\"\n            disabled={!isEmpty(errorMessage)}\n          >\n            Submit\n          </Btn>\n          <Btn\n            type=\"cancel\"\n            id=\"cancelUser\"\n            name=\"cancelUser\"\n            onClick={this.handleCancel}\n          >\n            Cancel\n          </Btn>\n        </div>\n      </fieldset>\n    </Form>\n  </CreateUserStyles>\n);\n\nexport default CreateUserForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaatQA;AACA;AAmRA;;;;A","sourceRoot":""}