{"version":3,"file":"static/webpack/static/development/pages/account/add-user.js.d8a9730285f1a1fd415e.hot-update.js","sources":["webpack:///./components/CreateUser.js","webpack:///./components/CreateUserForm.js","webpack:///./components/styles/Btn.js","webpack:///./components/styles/Form.js","webpack:///./lib/isEmpty.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport CreateUserForm from './CreateUserForm';\nimport {\n  validateFirstName,\n  validateUsername,\n  validatePermissions,\n  validatePassword,\n  validateConfirmPassword,\n  comparePasswords,\n} from '../lib/validation';\n\nconst CreateUserStyles = styled.div`\n  h4 {\n    color: ${props => props.theme.red};\n  }\n\n  h5 {\n    margin-bottom: 1rem;\n  }\n\n  .form-row.permissions .row-full {\n    @media screen and (min-width: 768px) {\n      display: flex;\n      flex-direction: row;\n\n      label p {\n        margin-right: 1rem;\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst CREATE_USER_MUTATION = gql`\n  mutation CREATE_USER_MUTATION(\n    $firstName: String!\n    $lastName: String\n    $company: String\n    $email: String\n    $address: String\n    $phone: String\n    $username: String!\n    $password: String!\n    $permissions: String!\n    $canOrder: Boolean!\n  ) {\n    createUser(\n      data: {\n        firstName: $firstName\n        lastName: $lastName\n        company: $company\n        email: $email\n        address: $address\n        phone: $phone\n        username: $username\n        password: $password\n        permissions: $permissions\n        canOrder: $canOrder\n        active: true\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateUser extends Component {\n  state = {\n    firstName: '', // required\n    lastName: '',\n    username: '', // required\n    company: '',\n    email: '',\n    permissions: '', // required\n    canOrder: false, // required - needs to be false by default\n    phone: '',\n    address: '',\n    password: '', // required\n    confirmPassword: '', // required\n    error: {},\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  };\n\n  handleCheckbox = e => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state.canOrder });\n  };\n\n  validateInput = e => {\n    const { name, value } = e.target;\n    const error = {};\n\n    if (name === 'firstName' && validateFirstName(value)) {\n      error.firstName = validateFirstName(value);\n    }\n\n    if (name === 'username' && validateUsername(value)) {\n      error.username = validateUsername(value);\n    }\n\n    if (name === 'permissions' && validatePermissions(value)) {\n      error.permissions = validatePermissions(value);\n    }\n\n    this.setState({\n      error: {\n        ...this.state.error,\n        ...error,\n      },\n    });\n  };\n\n  validateForm = () => {\n    let isValid;\n    const error = {};\n    const {\n      firstName,\n      username,\n      permissions,\n      password,\n      confirmPassword,\n    } = this.state;\n\n    if (validateFirstName(firstName)) {\n      error.firstName = validateFirstName(firstName);\n    }\n\n    if (validateUsername(username)) {\n      error.username = validateUsername(username);\n    }\n\n    if (validatePermissions(permissions)) {\n      error.permissions = validatePermissions(permissions);\n    }\n\n    this.setState({ error });\n  };\n\n  resetState = e => {\n    this.setState({\n      firstName: '', // required\n      lastName: '',\n      username: '', // required\n      company: '',\n      email: '',\n      permissions: '', // required\n      canOrder: false, // required - needs to be false by default\n      phone: '',\n      address: '',\n      password: '', // required\n      confirmPassword: '', // required\n      error: {},\n    });\n\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    const errorMessage = this.state.error;\n\n    return (\n      <Mutation mutation={CREATE_USER_MUTATION} variables={this.state}>\n        {(createUser, { loading, error }) => (\n          <CreateUserForm\n            handleChange={this.handleChange}\n            handleCheckbox={this.handleCheckbox}\n            validateInput={this.validateInput}\n            validateForm={validateForm}\n            resetState={this.resetState}\n            error={errorMessage}\n          />\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateUser;\n","import Form from './styles/Form';\nimport Btn from './styles/Btn';\nimport isEmpty from '../lib/isEmpty';\n\nconst CreateUserForm = props => (\n  <CreateUserStyles>\n    <Form\n      id=\"new_user_info\"\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        this.validateForm();\n\n        if (!errorMessage) {\n          const res = await createUser();\n          this.resetState(e);\n        }\n      }}\n    >\n      <fieldset disabled={loading} aria-busy={loading}>\n        <h4>Add New User</h4>\n        <div className=\"form-body\">\n          <div className=\"form-section\">\n            <h5>User Information</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"firstName\">\n                  <p>First Name</p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.firstName ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.firstName && errorMessage.firstName}\n                </p>\n              </div>\n              <div className=\"row-half\">\n                <label htmlFor=\"lastName\">\n                  <p>\n                    Last Name <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"username\">\n                  <p>Username</p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.username ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.username && errorMessage.username}\n                </p>\n              </div>\n\n              <div className=\"row-half\">\n                <label htmlFor=\"company\">\n                  <p>\n                    Company <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"company\"\n                  name=\"company\"\n                  value={this.state.company}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"email\">\n                  <p>\n                    Email Address <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h5>Permissions</h5>\n            <div className=\"form-row info permissions\">\n              <div\n                className={`row-full ${\n                  errorMessage.permissions ? 'error' : ''\n                }`}\n              >\n                <label htmlFor=\"customerPermissions\">\n                  Customer\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"customerPermissions\"\n                    value=\"CUSTOMER\"\n                    checked={this.state.permissions === 'CUSTOMER' && 'checked'}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"employeePermissions\">\n                  Employee\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"employeePermissions\"\n                    checked={this.state.permissions === 'EMPLOYEE' && 'checked'}\n                    value=\"EMPLOYEE\"\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <label htmlFor=\"adminPermissions\">\n                  Administrator\n                  <input\n                    type=\"radio\"\n                    name=\"permissions\"\n                    id=\"adminPermissions\"\n                    checked={this.state.permissions === 'ADMIN' && 'checked'}\n                    value=\"ADMIN\"\n                    onChange={this.handleChange}\n                  />\n                </label>\n              </div>\n              <p className=\"error\">\n                {errorMessage.permissions && errorMessage.permissions}\n              </p>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full can-order\">\n                <label htmlFor=\"canOrder\">\n                  <p>Is this user allowed to create their own order?</p>\n                </label>\n                <input\n                  id=\"canOrder\"\n                  name=\"canOrder\"\n                  type=\"checkbox\"\n                  checked={this.state.canOrder === true && 'checked'}\n                  onChange={this.handleCheckbox}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* TODO: check privileges ?? */}\n\n          <div className=\"form-section\">\n            <h5>Contact Information</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"phone\">\n                  <p>\n                    Phone Number <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={this.state.phone}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row info\">\n              <div className=\"row-full\">\n                <label htmlFor=\"address\">\n                  <p>\n                    Street Address <strong>&nbsp;(Optional)</strong>\n                  </p>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h5>Password</h5>\n            <div className=\"form-row info\">\n              <div className=\"row-half\">\n                <label htmlFor=\"password\">\n                  <p>\n                    {this.props.action === 'update' ? 'New ' : ''}\n                    Password\n                  </p>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.password ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.password && errorMessage.password}\n                </p>\n              </div>\n              <div className=\"row-half\">\n                <label htmlFor=\"confirmPassword\">\n                  <p>Confirm Password</p>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                  className={errorMessage.confirmPassword ? 'error' : ''}\n                />\n                <p className=\"error\">\n                  {errorMessage.confirmPassword && errorMessage.confirmPassword}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-footer\">\n          <Btn\n            type=\"submit\"\n            id=\"createUser\"\n            name=\"createUser\"\n            disabled={!isEmpty(errorMessage)}\n          >\n            Submit\n          </Btn>\n          <Btn\n            type=\"cancel\"\n            id=\"cancelUser\"\n            name=\"cancelUser\"\n            onClick={this.handleCancel}\n          >\n            Cancel\n          </Btn>\n        </div>\n      </fieldset>\n    </Form>\n  </CreateUserStyles>\n);\n","import styled from 'styled-components';\n\nconst Btn = styled.button`\n  transition: background 0.15s ease-out;\n  height: 3.5rem;\n  border-radius: 0.3rem;\n  padding: 0.5rem 1.5rem;\n  color: ${props => props.theme.white};\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n\n  background: ${({ type, theme }) => {\n    switch (type) {\n      case 'submit':\n        return theme.green;\n      case 'cancel':\n        return theme.grey;\n    }\n  }};\n\n  &:enabled:hover {\n    background: ${({ type, theme }) => {\n      switch (type) {\n        case 'submit':\n          return theme.lightgreen;\n        case 'cancel':\n          return theme.lightgrey;\n        default:\n          return theme.green;\n      }\n    }};\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n`;\n\nexport default Btn;\n","import styled, { keyframes } from 'styled-components';\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n  }\n\n  to {\n    background-position: 100% 100%;\n  }\n`;\n\nconst Form = styled.form`\n  margin: auto;\n\n  input,\n  textarea,\n  select,\n  option,\n  label {\n    font-size: 1.6rem;\n  }\n\n  input:not([type='submit']),\n  input:not([type='radio']),\n  input:not([type='checkbox']),\n  textarea,\n  select,\n  option {\n    background: ${props => props.theme.white};\n    margin: 0 0 10px;\n    outline: none;\n    border: 1px solid ${props => props.theme.lightgrey};\n    padding: 7.5px 5px;\n    border-radius: 2px;\n  }\n\n  input[type='radio'],\n  input[type='checkbox'] {\n    margin: 0;\n    padding: 0;\n    width: 1.6rem !important;\n    height: 1.6rem !important;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  /* Change Autocomplete styles in Chrome */\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus input:-webkit-autofill,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-text-fill-color: ${props => props.theme.red};\n    -webkit-box-shadow: 0 0 0px 1000px #fff inset;\n    box-shadow: 0 0 0px 1000px #fff inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n\n  /* hide number input controls */\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n\n    &::before {\n      height: 10px;\n      content: '';\n      display: block;\n      margin-bottom: 1rem;\n      background-image: linear-gradient(\n        to right,\n        #98272b 0%,\n        #cb9395 50%,\n        #98272b 100%\n      );\n    }\n\n    &[aria-busy='true']::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n\n  p.error {\n    color: ${props => props.theme.red};\n    font-weight: 600;\n    margin-top: -0.5rem;\n  }\n\n  input.error {\n    border: 0.1rem solid ${props => props.theme.red} !important;\n  }\n\n  .form-row {\n    width: 100%;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      margin-bottom: 30px;\n    }\n\n    input:not([type='submit']),\n    textarea {\n      width: 100%;\n    }\n\n    &.permissions label {\n      margin-right: 4rem;\n    }\n\n    &.permissions input {\n      margin-left: 1.5rem;\n    }\n  }\n\n  .form-section {\n    padding-top: 25px;\n\n    &.update-password-section {\n      h6.successully-updated {\n        color: ${props => props.theme.green};\n        text-align: center;\n        margin-bottom: 15px;\n      }\n    }\n  }\n\n  .row {\n    &-full {\n      width: 100%;\n    }\n\n    &-half {\n      width: 100%;\n      margin-bottom: 30px;\n\n      @media screen and (min-width: 768px) {\n        margin-bottom: 0;\n        width: 50%;\n      }\n\n      &:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n\n    &-third {\n      width: 100%;\n      margin-bottom: 30px;\n\n      @media screen and (min-width: 768px) {\n        width: 33.33333%;\n        margin-bottom: 0;\n      }\n\n      &:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n\n    &-fourth {\n      width: 100%;\n      margin-bottom: 30px;\n\n      @media screen and (min-width: 768px) {\n        width: 25%;\n        margin-bottom: 0;\n      }\n\n      &:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n  }\n\n  .form-header {\n    margin-bottom: 20px;\n  }\n\n  .form-footer {\n    display: flex;\n    justify-content: center;\n    padding: 10px 0;\n\n    button:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n\n  .button-loading-overlay {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.6);\n    border-radius: 200px;\n    z-index: 2;\n    display: none;\n\n    .loading {\n      display: block;\n    }\n  }\n\n  #mc_embed_signup input {\n    margin-top: 5px;\n  }\n\n  #mc_embed_signup .indicates-required {\n    margin-bottom: 15px;\n  }\n\n  .form-section:not(:first-child) {\n    margin-top: 30px;\n  }\n\n  .form-row.info,\n  .form-row.editor {\n    input:not([type='submit']),\n    input:not([type='radio']),\n    input:not([type='checkbox']) {\n      height: 45px;\n      border-radius: 0.2rem;\n      border: 1px solid ${props => props.theme.lightgrey};\n      padding: 7.5px 5px;\n    }\n\n    .select-menu {\n      border: 1px solid ${props => props.theme.lightgrey};\n      margin-top: -1px;\n      margin-bottom: 17.5px;\n      padding: 1px 1px 0;\n\n      select {\n        font-weight: 400;\n        background: transparent;\n        width: 100%;\n        height: 45px;\n        border: none;\n        padding: 0;\n        margin: -2px 0 0;\n      }\n    }\n\n    input:not([type='submit']) {\n      font-weight: 400;\n    }\n\n    textarea {\n      font-weight: 400;\n    }\n\n    label p {\n      display: flex;\n      align-items: flex-end;\n      height: 28px;\n      font-weight: 400;\n      margin-bottom: 1rem;\n    }\n  }\n\n  .new-wholesale-item-form {\n    padding-top: 15px;\n  }\n\n  .form-row.whs input {\n    border: 2px solid #eee !important;\n    margin: 0;\n    height: 45px;\n  }\n\n  .form-row.whs .select-menu {\n    border: 2px solid #eee !important;\n    margin: 0;\n    height: 45px;\n  }\n\n  .form-row.whs p {\n    padding: 5px 0;\n  }\n\n  .form-row.info .can-order {\n    display: flex;\n    align-items: center;\n\n    p {\n      margin: 0;\n      height: 20px;\n    }\n\n    input {\n      width: auto;\n      height: 15px;\n      margin: 0 0 0 15px;\n    }\n  }\n\n  .form-row.info .user-can-order {\n    height: 45px !important;\n  }\n\n  .form-row.permissions label {\n    display: flex;\n    align-items: center;\n\n    p {\n      width: 150px;\n    }\n  }\n`;\n\nconst FormRow = styled.section``;\n\nexport default Form;\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nmodule.exports = isEmpty;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAoBA;AACA;AAgCA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAZA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAZA;AACA;AAcA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;;;;AAjHA;AACA;AAmHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaatQA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AASA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAEA;AAUA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAGA;AAAA;AA0BA;AAAA;AAyCA;AAAA;AAMA;AAAA;AAkCA;AAAA;AA2GA;AAAA;AAKA;AAAA;AAmFA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;AChVA;AAAA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}