{"version":3,"file":"static/webpack/static/development/pages/account/add-user.js.3822b884c350615388c3.hot-update.js","sources":["webpack:///./components/CreateUser.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Form from './styles/Form';\nimport Btn from './styles/Btn';\nimport isEmpty from '../lib/isEmpty';\nimport {\n  validateFirstName,\n  validateUsername,\n  validatePermissions,\n  validatePassword,\n  validateConfirmPassword,\n  comparePasswords,\n} from '../lib/validation';\nimport Input from './Input';\n\nconst CreateUserStyles = styled.div`\n  h4 {\n    color: ${props => props.theme.red};\n  }\n\n  h5 {\n    margin-bottom: 1rem;\n  }\n\n  .permission-options {\n    display: flex;\n  }\n\n  .form-row.permissions .row-full {\n    @media screen and (min-width: 768px) {\n      display: flex;\n      flex-direction: row;\n\n      label p {\n        margin-right: 1rem;\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst CREATE_USER_MUTATION = gql`\n  mutation CREATE_USER_MUTATION(\n    $firstName: String!\n    $lastName: String\n    $company: String\n    $email: String\n    $address: String\n    $phone: String\n    $username: String!\n    $password: String!\n    $permissions: String!\n    $canOrder: Boolean!\n  ) {\n    createUser(\n      data: {\n        firstName: $firstName\n        lastName: $lastName\n        company: $company\n        email: $email\n        address: $address\n        phone: $phone\n        username: $username\n        password: $password\n        permissions: $permissions\n        canOrder: $canOrder\n        active: true\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateUser extends Component {\n  state = {\n    firstName: '', // required\n    lastName: '',\n    username: '', // required\n    company: '',\n    email: '',\n    permissions: '', // required\n    canOrder: false, // required - needs to be false by default\n    phone: '',\n    address: '',\n    password: '', // required\n    confirmPassword: '', // required\n    error: {},\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    console.log(val);\n    this.setState({ [name]: val });\n  };\n\n  handleCheckbox = e => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state.canOrder });\n  };\n\n  validateInput = e => {\n    const { name, value } = e.target;\n    const error = {};\n    error[name] = '';\n    this.setState({ error: { ...this.state.error, ...error } });\n\n    if (name === 'firstName' && validateFirstName(value)) {\n      error.firstName = validateFirstName(value);\n    }\n\n    if (name === 'username' && validateUsername(value)) {\n      error.username = validateUsername(value);\n    }\n\n    if (name === 'permissions' && validatePermissions(value)) {\n      error.permissions = validatePermissions(value);\n    }\n\n    if (name === 'password' && validatePassword(value)) {\n      error.password = validatePassword(value);\n    }\n\n    if (name === 'confirmPassword' && validateConfirmPassword(value)) {\n      error.confirmPassword = validateConfirmPassword(value);\n    } else if (name === 'confirmPassword' && comparePasswords(value)) {\n      error.comparePasswords = comparePasswords(value);\n    }\n\n    this.setState({\n      error: {\n        ...this.state.error,\n        ...error,\n      },\n    });\n  };\n\n  validateForm = () => {\n    const error = {};\n\n    if (validateFirstName(this.state.firstName)) {\n      error.firstName = validateFirstName(this.state.firstName);\n    }\n\n    if (validateUsername(this.state.username)) {\n      error.username = validateUsername(this.state.username);\n    }\n\n    if (validatePermissions(this.state.permissions)) {\n      error.permissions = validatePermissions(this.state.permissions);\n    }\n\n    if (validatePassword(this.state.password)) {\n      error.password = validatePassword(this.state.password);\n    }\n\n    if (validateConfirmPassword(this.state.confirmPassword)) {\n      error.confirmPassword = validateConfirmPassword(\n        this.state.confirmPassword\n      );\n    } else if (comparePasswords(this.state.confirmPassword)) {\n      error.comparePasswords = comparePasswords(\n        this.state.password,\n        this.state.confirmPassword\n      );\n    }\n\n    this.setState({ error });\n  };\n\n  resetState = e => {\n    this.setState({\n      firstName: '', // required\n      lastName: '',\n      username: '', // required\n      company: '',\n      email: '',\n      permissions: '', // required\n      canOrder: false, // required - needs to be false by default\n      phone: '',\n      address: '',\n      password: '', // required\n      confirmPassword: '', // required\n      error: {},\n    });\n\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    const errorMessage = this.state.error;\n\n    return (\n      <Mutation mutation={CREATE_USER_MUTATION} variables={this.state}>\n        {(createUser, { loading, error }) => (\n          <CreateUserStyles>\n            <Form\n              method=\"post\"\n              onSubmit={async e => {\n                e.preventDefault();\n                this.validateForm();\n\n                if (!errorMessage) {\n                  const res = await createUser();\n                  this.resetState(e);\n                }\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h4>Add New User</h4>\n                <div className=\"form-body\">\n                  <div className=\"form-section\">\n                    <h5>User Information</h5>\n                    <div className=\"form-row info\">\n                      <Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={this.state.firstName}\n                        onChange={this.handleChange}\n                        onBlur={this.validateInput}\n                        error={errorMessage.firstName}\n                        size=\"half\"\n                      />\n\n                      <Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={this.state.lastName}\n                        onChange={this.handleChange}\n                        optional={true}\n                        size=\"half\"\n                      />\n                    </div>\n\n                    <div className=\"form-row info\">\n                      <Input\n                        name=\"username\"\n                        label=\"Username\"\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        onBlur={this.validateInput}\n                        error={errorMessage.username}\n                        size=\"half\"\n                      />\n\n                      <Input\n                        name=\"company\"\n                        label=\"Company\"\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                        optional={true}\n                        size=\"half\"\n                      />\n                    </div>\n\n                    <div className=\"form-row info\">\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        label=\"Email Address\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        optional={true}\n                        size=\"full\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-section\">\n                    <h5>Permissions</h5>\n                    <div className=\"form-row info permissions\">\n                      <div\n                        className={`row-full ${\n                          errorMessage.permissions ? 'error' : ''\n                        }`}\n                      >\n                        <div className=\"permission-options\">\n                          <label htmlFor=\"customerPermissions\">\n                            Customer\n                            <input\n                              type=\"radio\"\n                              name=\"permissions\"\n                              id=\"customerPermissions\"\n                              value=\"CUSTOMER\"\n                              checked={\n                                this.state.permissions === 'CUSTOMER' &&\n                                'checked'\n                              }\n                              onChange={this.handleChange}\n                              onBlur={this.validateInput}\n                            />\n                          </label>\n                          <label htmlFor=\"employeePermissions\">\n                            Employee\n                            <input\n                              type=\"radio\"\n                              name=\"permissions\"\n                              id=\"employeePermissions\"\n                              checked={\n                                this.state.permissions === 'EMPLOYEE' &&\n                                'checked'\n                              }\n                              value=\"EMPLOYEE\"\n                              onChange={this.handleChange}\n                              onBlur={this.validateInput}\n                            />\n                          </label>\n                          <label htmlFor=\"adminPermissions\">\n                            Administrator\n                            <input\n                              type=\"radio\"\n                              name=\"permissions\"\n                              id=\"adminPermissions\"\n                              checked={\n                                this.state.permissions === 'ADMIN' && 'checked'\n                              }\n                              value=\"ADMIN\"\n                              onChange={this.handleChange}\n                              onBlur={this.validateInput}\n                            />\n                          </label>\n                        </div>\n\n                        <p className=\"error\">\n                          {errorMessage.permissions && errorMessage.permissions}\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"form-row info\">\n                      <div className=\"row-full can-order\">\n                        <label htmlFor=\"canOrder\">\n                          <p>Is this user allowed to create their own order?</p>\n                        </label>\n                        <input\n                          id=\"canOrder\"\n                          name=\"canOrder\"\n                          type=\"checkbox\"\n                          checked={this.state.canOrder === true && 'checked'}\n                          onChange={this.handleCheckbox}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* TODO: check privileges ?? */}\n\n                  <div className=\"form-section\">\n                    <h5>Contact Information</h5>\n                    <div className=\"form-row info\">\n                      <Input\n                        name=\"phone\"\n                        label=\"Phone Number\"\n                        value={this.state.phone}\n                        onChange={this.handleChange}\n                        optional={true}\n                        size=\"full\"\n                      />\n                    </div>\n\n                    <div className=\"form-row info\">\n                      <Input\n                        name=\"address\"\n                        label=\"Street Address\"\n                        value={this.state.address}\n                        onChange={this.handleChange}\n                        optional={true}\n                        size=\"full\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-section\">\n                    <h5>Password</h5>\n                    <div className=\"form-row info\">\n                      <Input\n                        type=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        onBlur={this.validateInput}\n                        error={errorMessage.password}\n                        size=\"half\"\n                      />\n                      <Input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        label=\"Confirm Password\"\n                        value={this.state.confirmPassword}\n                        onChange={this.handleChange}\n                        onBlur={this.validateInput}\n                        error={errorMessage.confirmPassword}\n                        size=\"half\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-footer\">\n                  <Btn\n                    type=\"submit\"\n                    id=\"createUser\"\n                    name=\"createUser\"\n                    disabled={!isEmpty(errorMessage)}\n                  >\n                    Submit\n                  </Btn>\n                  <Btn\n                    type=\"cancel\"\n                    id=\"cancelUser\"\n                    name=\"cancelUser\"\n                    onClick={this.handleCancel}\n                  >\n                    Cancel\n                  </Btn>\n                </div>\n              </fieldset>\n            </Form>\n          </CreateUserStyles>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateUser;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAwBA;AACA;AAgCA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAZA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAZA;AACA;AAcA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtNA;AAqOA;;;;AA9VA;AACA;AAgWA;;;;A","sourceRoot":""}