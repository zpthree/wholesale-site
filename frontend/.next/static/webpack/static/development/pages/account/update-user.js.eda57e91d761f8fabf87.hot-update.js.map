{"version":3,"file":"static/webpack/static/development/pages/account/update-user.js.eda57e91d761f8fabf87.hot-update.js","sources":["webpack:///./components/CreateUser.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Form from './styles/Form';\nimport Btn from './styles/Btn';\n\nconst CreateUserStyles = styled.div`\n  h4 {\n    color: ${props => props.theme.red};\n  }\n\n  h5 {\n    margin-bottom: 1rem;\n  }\n\n  .form-row.permissions .row-full {\n    display: flex;\n    flex-direction: row;\n\n    label p {\n      margin-right: 1rem;\n      margin-left: 0;\n    }\n  }\n`;\n\nclass CreateUser extends Component {\n  state = {\n    ...this.props.initialState,\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  };\n\n  handleCheckbox = e => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state.canOrder });\n  };\n\n  handleCancel = e => {\n    e.preventDefault();\n\n    const { action } = this.props;\n\n    if (action === 'create') {\n      this.setState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        company: '',\n        email: '',\n        permissions: '',\n        canOrder: '',\n        phone: '',\n        address: '',\n        password: '',\n        confirmPassword: '',\n      });\n    }\n\n    if (action === 'update') {\n      console.log('reset user data');\n    }\n\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    return (\n      <CreateUserStyles>\n        <h4>{this.props.title}</h4>\n        <Form id=\"new_user_info\" method=\"post\">\n          <div className=\"form-body\">\n            <div className=\"form-section\">\n              <h5>User Information</h5>\n              <div className=\"form-row info\">\n                <div className=\"row-half\">\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.handleChange}\n                    required\n                  />\n                  <label htmlFor=\"firstName\">\n                    <p>First Name</p>\n                  </label>\n                </div>\n                <div className=\"row-half\">\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"lastName\">\n                    <p>\n                      Last Name <strong>&nbsp;(Optional)</strong>\n                    </p>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"form-row info\">\n                <div className=\"row-full\">\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    required\n                  />\n                  <label htmlFor=\"username\">\n                    <p>Username</p>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"form-row info\">\n                <div className=\"row-full\">\n                  <input\n                    type=\"text\"\n                    id=\"company\"\n                    name=\"company\"\n                    value={this.state.company}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"company\">\n                    <p>\n                      Company <strong>&nbsp;(Optional)</strong>\n                    </p>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"form-row info\">\n                <div className=\"row-full\">\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"email\">\n                    <p>\n                      Email Address <strong>&nbsp;(Optional)</strong>\n                    </p>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h5>Permissions</h5>\n              <div className=\"form-row info permissions\">\n                <div className=\"row-full\">\n                  <label htmlFor=\"customerPermissions\">\n                    <p>Customer</p>\n                    <input\n                      type=\"radio\"\n                      name=\"permissions\"\n                      id=\"customerPermissions\"\n                      value=\"CUSTOMER\"\n                      checked={\n                        this.state.permissions === 'CUSTOMER' && 'checked'\n                      }\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </label>\n                  <label htmlFor=\"employeePermissions\">\n                    <p>Employee</p>\n                    <input\n                      type=\"radio\"\n                      name=\"permissions\"\n                      id=\"employeePermissions\"\n                      checked={\n                        this.state.permissions === 'EMPLOYEE' && 'checked'\n                      }\n                      value=\"EMPLOYEE\"\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </label>\n                  <label htmlFor=\"adminPermissions\">\n                    <p>Administrator</p>\n                    <input\n                      type=\"radio\"\n                      name=\"permissions\"\n                      id=\"adminPermissions\"\n                      checked={this.state.permissions === 'ADMIN' && 'checked'}\n                      value=\"ADMIN\"\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"form-row info\">\n                <div className=\"row-full can-order\">\n                  <label htmlFor=\"canOrder\">\n                    <p>Is this user allowed to create their own order?</p>\n                  </label>\n                  <input\n                    id=\"canOrder\"\n                    name=\"canOrder\"\n                    type=\"checkbox\"\n                    checked={this.state.canOrder === true && 'checked'}\n                    onChange={this.handleCheckbox}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* TODO: check privileges ?? */}\n\n            <div className=\"form-section\">\n              <h5>Contact Information</h5>\n              <div className=\"form-row info\">\n                <div className=\"row-full\">\n                  <input\n                    type=\"text\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={this.state.phone}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"phone\">\n                    <p>\n                      Phone Number <strong>&nbsp;(Optional)</strong>\n                    </p>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"form-row info\">\n                <div className=\"row-full\">\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    value={this.state.address}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"address\">\n                    <p>\n                      Street Address <strong>&nbsp;(Optional)</strong>\n                    </p>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h5>Password</h5>\n              <div className=\"form-row info\">\n                <div className=\"row-half\">\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    required\n                  />\n                  <label htmlFor=\"password\">\n                    <p>\n                      {this.props.action === 'update' ? 'New ' : ''}Password\n                    </p>\n                  </label>\n                </div>\n                <div className=\"row-half\">\n                  <input\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.handleChange}\n                    required\n                  />\n                  <label htmlFor=\"confirmPassword\">\n                    <p>Confirm Password</p>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-footer\">\n            <Btn type=\"submit\" id=\"createUser\" name=\"createUser\">\n              Submit\n            </Btn>\n            <Btn\n              type=\"cancel\"\n              id=\"cancelUser\"\n              name=\"cancelUser\"\n              onClick={this.handleCancel}\n            >\n              Cancel\n            </Btn>\n          </div>\n        </Form>\n      </CreateUserStyles>\n    );\n  }\n}\n\nexport default CreateUser;\n"],"mappings":"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","sourceRoot":""}