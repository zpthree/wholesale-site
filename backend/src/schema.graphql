# import * from './generated/prisma.graphql'

type Query {
  item(where: ItemWhereUniqueInput!): Item
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  cartItems(where: CartItemWhereInput): [CartItem]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  department(department: String): [Item!]!
  user(id: ID!): User!
  users(query: String): [User!]!
  me: User
}

type Mutation {
  createItem(data: ItemCreateInput!): Item!
  deleteItem(id: ID!): Item!
  updateItem(id: ID!, data: ItemUpdateInput!): Item!
  createUser(data: UserCreateInput!): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UserUpdateInput!): User!
  signIn(username: String!, password: String!): User!
  signOut: SuccessMessage!
  requestReset(email: String!): SuccessMessage!
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(userId: ID!, canOrder: Boolean, permissions: Boolean): User
  addToCart(id: ID!, quantity: Int): CartItem
}

type SuccessMessage {
  message: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String!
  permissions: Permission!
  canOrder: Boolean!
  active: Boolean!
  cart: [CartItem!]!
}
