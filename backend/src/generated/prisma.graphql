# source: https://us1.prisma.sh/zach-patrick-58210e/wholesale-site/dev
# timestamp: Wed Mar 06 2019 11:30:18 GMT-0500 (Eastern Standard Time)

type AggregateCartItem {
  count: Int!
}

type AggregateInvoice {
  count: Int!
}

type AggregateInvoiceItem {
  count: Int!
}

type AggregateItem {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type CartItem implements Node {
  id: ID!
  quantity: Int!
  item: Item
  user: User!
}

"""A connection to a list of items."""
type CartItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CartItemEdge]!
  aggregate: AggregateCartItem!
}

input CartItemCreateInput {
  quantity: Int
  item: ItemCreateOneInput
  user: UserCreateOneWithoutCartInput!
}

input CartItemCreateManyWithoutUserInput {
  create: [CartItemCreateWithoutUserInput!]
  connect: [CartItemWhereUniqueInput!]
}

input CartItemCreateWithoutUserInput {
  quantity: Int
  item: ItemCreateOneInput
}

"""An edge in a connection."""
type CartItemEdge {
  """The item at the end of the edge."""
  node: CartItem!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CartItemOrderByInput {
  id_ASC
  id_DESC
  quantity_ASC
  quantity_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CartItemPreviousValues {
  id: ID!
  quantity: Int!
}

input CartItemScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CartItemScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CartItemScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CartItemScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
}

type CartItemSubscriptionPayload {
  mutation: MutationType!
  node: CartItem
  updatedFields: [String!]
  previousValues: CartItemPreviousValues
}

input CartItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CartItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CartItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CartItemSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CartItemWhereInput
}

input CartItemUpdateInput {
  quantity: Int
  item: ItemUpdateOneInput
  user: UserUpdateOneRequiredWithoutCartInput
}

input CartItemUpdateManyDataInput {
  quantity: Int
}

input CartItemUpdateManyMutationInput {
  quantity: Int
}

input CartItemUpdateManyWithoutUserInput {
  create: [CartItemCreateWithoutUserInput!]
  connect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  disconnect: [CartItemWhereUniqueInput!]
  delete: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  deleteMany: [CartItemScalarWhereInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutUserInput!]
}

input CartItemUpdateManyWithWhereNestedInput {
  where: CartItemScalarWhereInput!
  data: CartItemUpdateManyDataInput!
}

input CartItemUpdateWithoutUserDataInput {
  quantity: Int
  item: ItemUpdateOneInput
}

input CartItemUpdateWithWhereUniqueWithoutUserInput {
  where: CartItemWhereUniqueInput!
  data: CartItemUpdateWithoutUserDataInput!
}

input CartItemUpsertWithWhereUniqueWithoutUserInput {
  where: CartItemWhereUniqueInput!
  update: CartItemUpdateWithoutUserDataInput!
  create: CartItemCreateWithoutUserInput!
}

input CartItemWhereInput {
  """Logical AND on all given filters."""
  AND: [CartItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [CartItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CartItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  quantity: Int

  """All values that are not equal to given value."""
  quantity_not: Int

  """All values that are contained in given list."""
  quantity_in: [Int!]

  """All values that are not contained in given list."""
  quantity_not_in: [Int!]

  """All values less than the given value."""
  quantity_lt: Int

  """All values less than or equal the given value."""
  quantity_lte: Int

  """All values greater than the given value."""
  quantity_gt: Int

  """All values greater than or equal the given value."""
  quantity_gte: Int
  item: ItemWhereInput
  user: UserWhereInput
}

input CartItemWhereUniqueInput {
  id: ID
}

scalar DateTime

type Invoice implements Node {
  id: ID!
  items(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceItem!]
  createdAt: DateTime!
  updatedAt: DateTime!
  total: Int!
  user: User!
  status: InvoiceStatus!
  pickupDate: String
  deliveryDate: String
}

"""A connection to a list of items."""
type InvoiceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [InvoiceEdge]!
  aggregate: AggregateInvoice!
}

input InvoiceCreateInput {
  total: Int!
  status: InvoiceStatus!
  pickupDate: String
  deliveryDate: String
  items: InvoiceItemCreateManyInput
  user: UserCreateOneInput!
}

"""An edge in a connection."""
type InvoiceEdge {
  """The item at the end of the edge."""
  node: Invoice!

  """A cursor for use in pagination."""
  cursor: String!
}

type InvoiceItem implements Node {
  id: ID!
  department: String!
  barcode: String
  brand: String
  title: String!
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  createdAt: DateTime!
  image: String
  largeImage: String
  cases: Int!
  price: Int!
  user: User!
}

"""A connection to a list of items."""
type InvoiceItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [InvoiceItemEdge]!
  aggregate: AggregateInvoiceItem!
}

input InvoiceItemCreateInput {
  department: String!
  barcode: String
  brand: String
  title: String!
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  image: String
  largeImage: String
  cases: Int!
  price: Int!
  user: UserCreateOneInput!
}

input InvoiceItemCreateManyInput {
  create: [InvoiceItemCreateInput!]
  connect: [InvoiceItemWhereUniqueInput!]
}

"""An edge in a connection."""
type InvoiceItemEdge {
  """The item at the end of the edge."""
  node: InvoiceItem!

  """A cursor for use in pagination."""
  cursor: String!
}

enum InvoiceItemOrderByInput {
  id_ASC
  id_DESC
  department_ASC
  department_DESC
  barcode_ASC
  barcode_DESC
  brand_ASC
  brand_DESC
  title_ASC
  title_DESC
  unitsPerCase_ASC
  unitsPerCase_DESC
  size_ASC
  size_DESC
  uom_ASC
  uom_DESC
  expiry_ASC
  expiry_DESC
  createdAt_ASC
  createdAt_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  cases_ASC
  cases_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type InvoiceItemPreviousValues {
  id: ID!
  department: String!
  barcode: String
  brand: String
  title: String!
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  createdAt: DateTime!
  image: String
  largeImage: String
  cases: Int!
  price: Int!
}

input InvoiceItemScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [InvoiceItemScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvoiceItemScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvoiceItemScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  department: String

  """All values that are not equal to given value."""
  department_not: String

  """All values that are contained in given list."""
  department_in: [String!]

  """All values that are not contained in given list."""
  department_not_in: [String!]

  """All values less than the given value."""
  department_lt: String

  """All values less than or equal the given value."""
  department_lte: String

  """All values greater than the given value."""
  department_gt: String

  """All values greater than or equal the given value."""
  department_gte: String

  """All values containing the given string."""
  department_contains: String

  """All values not containing the given string."""
  department_not_contains: String

  """All values starting with the given string."""
  department_starts_with: String

  """All values not starting with the given string."""
  department_not_starts_with: String

  """All values ending with the given string."""
  department_ends_with: String

  """All values not ending with the given string."""
  department_not_ends_with: String
  barcode: String

  """All values that are not equal to given value."""
  barcode_not: String

  """All values that are contained in given list."""
  barcode_in: [String!]

  """All values that are not contained in given list."""
  barcode_not_in: [String!]

  """All values less than the given value."""
  barcode_lt: String

  """All values less than or equal the given value."""
  barcode_lte: String

  """All values greater than the given value."""
  barcode_gt: String

  """All values greater than or equal the given value."""
  barcode_gte: String

  """All values containing the given string."""
  barcode_contains: String

  """All values not containing the given string."""
  barcode_not_contains: String

  """All values starting with the given string."""
  barcode_starts_with: String

  """All values not starting with the given string."""
  barcode_not_starts_with: String

  """All values ending with the given string."""
  barcode_ends_with: String

  """All values not ending with the given string."""
  barcode_not_ends_with: String
  brand: String

  """All values that are not equal to given value."""
  brand_not: String

  """All values that are contained in given list."""
  brand_in: [String!]

  """All values that are not contained in given list."""
  brand_not_in: [String!]

  """All values less than the given value."""
  brand_lt: String

  """All values less than or equal the given value."""
  brand_lte: String

  """All values greater than the given value."""
  brand_gt: String

  """All values greater than or equal the given value."""
  brand_gte: String

  """All values containing the given string."""
  brand_contains: String

  """All values not containing the given string."""
  brand_not_contains: String

  """All values starting with the given string."""
  brand_starts_with: String

  """All values not starting with the given string."""
  brand_not_starts_with: String

  """All values ending with the given string."""
  brand_ends_with: String

  """All values not ending with the given string."""
  brand_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  unitsPerCase: Float

  """All values that are not equal to given value."""
  unitsPerCase_not: Float

  """All values that are contained in given list."""
  unitsPerCase_in: [Float!]

  """All values that are not contained in given list."""
  unitsPerCase_not_in: [Float!]

  """All values less than the given value."""
  unitsPerCase_lt: Float

  """All values less than or equal the given value."""
  unitsPerCase_lte: Float

  """All values greater than the given value."""
  unitsPerCase_gt: Float

  """All values greater than or equal the given value."""
  unitsPerCase_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  uom: String

  """All values that are not equal to given value."""
  uom_not: String

  """All values that are contained in given list."""
  uom_in: [String!]

  """All values that are not contained in given list."""
  uom_not_in: [String!]

  """All values less than the given value."""
  uom_lt: String

  """All values less than or equal the given value."""
  uom_lte: String

  """All values greater than the given value."""
  uom_gt: String

  """All values greater than or equal the given value."""
  uom_gte: String

  """All values containing the given string."""
  uom_contains: String

  """All values not containing the given string."""
  uom_not_contains: String

  """All values starting with the given string."""
  uom_starts_with: String

  """All values not starting with the given string."""
  uom_not_starts_with: String

  """All values ending with the given string."""
  uom_ends_with: String

  """All values not ending with the given string."""
  uom_not_ends_with: String
  expiry: String

  """All values that are not equal to given value."""
  expiry_not: String

  """All values that are contained in given list."""
  expiry_in: [String!]

  """All values that are not contained in given list."""
  expiry_not_in: [String!]

  """All values less than the given value."""
  expiry_lt: String

  """All values less than or equal the given value."""
  expiry_lte: String

  """All values greater than the given value."""
  expiry_gt: String

  """All values greater than or equal the given value."""
  expiry_gte: String

  """All values containing the given string."""
  expiry_contains: String

  """All values not containing the given string."""
  expiry_not_contains: String

  """All values starting with the given string."""
  expiry_starts_with: String

  """All values not starting with the given string."""
  expiry_not_starts_with: String

  """All values ending with the given string."""
  expiry_ends_with: String

  """All values not ending with the given string."""
  expiry_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  cases: Int

  """All values that are not equal to given value."""
  cases_not: Int

  """All values that are contained in given list."""
  cases_in: [Int!]

  """All values that are not contained in given list."""
  cases_not_in: [Int!]

  """All values less than the given value."""
  cases_lt: Int

  """All values less than or equal the given value."""
  cases_lte: Int

  """All values greater than the given value."""
  cases_gt: Int

  """All values greater than or equal the given value."""
  cases_gte: Int
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
}

type InvoiceItemSubscriptionPayload {
  mutation: MutationType!
  node: InvoiceItem
  updatedFields: [String!]
  previousValues: InvoiceItemPreviousValues
}

input InvoiceItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [InvoiceItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvoiceItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvoiceItemSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: InvoiceItemWhereInput
}

input InvoiceItemUpdateDataInput {
  department: String
  barcode: String
  brand: String
  title: String
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  image: String
  largeImage: String
  cases: Int
  price: Int
  user: UserUpdateOneRequiredInput
}

input InvoiceItemUpdateInput {
  department: String
  barcode: String
  brand: String
  title: String
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  image: String
  largeImage: String
  cases: Int
  price: Int
  user: UserUpdateOneRequiredInput
}

input InvoiceItemUpdateManyDataInput {
  department: String
  barcode: String
  brand: String
  title: String
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  image: String
  largeImage: String
  cases: Int
  price: Int
}

input InvoiceItemUpdateManyInput {
  create: [InvoiceItemCreateInput!]
  connect: [InvoiceItemWhereUniqueInput!]
  set: [InvoiceItemWhereUniqueInput!]
  disconnect: [InvoiceItemWhereUniqueInput!]
  delete: [InvoiceItemWhereUniqueInput!]
  update: [InvoiceItemUpdateWithWhereUniqueNestedInput!]
  updateMany: [InvoiceItemUpdateManyWithWhereNestedInput!]
  deleteMany: [InvoiceItemScalarWhereInput!]
  upsert: [InvoiceItemUpsertWithWhereUniqueNestedInput!]
}

input InvoiceItemUpdateManyMutationInput {
  department: String
  barcode: String
  brand: String
  title: String
  unitsPerCase: Float
  size: Float
  uom: String
  expiry: String
  image: String
  largeImage: String
  cases: Int
  price: Int
}

input InvoiceItemUpdateManyWithWhereNestedInput {
  where: InvoiceItemScalarWhereInput!
  data: InvoiceItemUpdateManyDataInput!
}

input InvoiceItemUpdateWithWhereUniqueNestedInput {
  where: InvoiceItemWhereUniqueInput!
  data: InvoiceItemUpdateDataInput!
}

input InvoiceItemUpsertWithWhereUniqueNestedInput {
  where: InvoiceItemWhereUniqueInput!
  update: InvoiceItemUpdateDataInput!
  create: InvoiceItemCreateInput!
}

input InvoiceItemWhereInput {
  """Logical AND on all given filters."""
  AND: [InvoiceItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvoiceItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvoiceItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  department: String

  """All values that are not equal to given value."""
  department_not: String

  """All values that are contained in given list."""
  department_in: [String!]

  """All values that are not contained in given list."""
  department_not_in: [String!]

  """All values less than the given value."""
  department_lt: String

  """All values less than or equal the given value."""
  department_lte: String

  """All values greater than the given value."""
  department_gt: String

  """All values greater than or equal the given value."""
  department_gte: String

  """All values containing the given string."""
  department_contains: String

  """All values not containing the given string."""
  department_not_contains: String

  """All values starting with the given string."""
  department_starts_with: String

  """All values not starting with the given string."""
  department_not_starts_with: String

  """All values ending with the given string."""
  department_ends_with: String

  """All values not ending with the given string."""
  department_not_ends_with: String
  barcode: String

  """All values that are not equal to given value."""
  barcode_not: String

  """All values that are contained in given list."""
  barcode_in: [String!]

  """All values that are not contained in given list."""
  barcode_not_in: [String!]

  """All values less than the given value."""
  barcode_lt: String

  """All values less than or equal the given value."""
  barcode_lte: String

  """All values greater than the given value."""
  barcode_gt: String

  """All values greater than or equal the given value."""
  barcode_gte: String

  """All values containing the given string."""
  barcode_contains: String

  """All values not containing the given string."""
  barcode_not_contains: String

  """All values starting with the given string."""
  barcode_starts_with: String

  """All values not starting with the given string."""
  barcode_not_starts_with: String

  """All values ending with the given string."""
  barcode_ends_with: String

  """All values not ending with the given string."""
  barcode_not_ends_with: String
  brand: String

  """All values that are not equal to given value."""
  brand_not: String

  """All values that are contained in given list."""
  brand_in: [String!]

  """All values that are not contained in given list."""
  brand_not_in: [String!]

  """All values less than the given value."""
  brand_lt: String

  """All values less than or equal the given value."""
  brand_lte: String

  """All values greater than the given value."""
  brand_gt: String

  """All values greater than or equal the given value."""
  brand_gte: String

  """All values containing the given string."""
  brand_contains: String

  """All values not containing the given string."""
  brand_not_contains: String

  """All values starting with the given string."""
  brand_starts_with: String

  """All values not starting with the given string."""
  brand_not_starts_with: String

  """All values ending with the given string."""
  brand_ends_with: String

  """All values not ending with the given string."""
  brand_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  unitsPerCase: Float

  """All values that are not equal to given value."""
  unitsPerCase_not: Float

  """All values that are contained in given list."""
  unitsPerCase_in: [Float!]

  """All values that are not contained in given list."""
  unitsPerCase_not_in: [Float!]

  """All values less than the given value."""
  unitsPerCase_lt: Float

  """All values less than or equal the given value."""
  unitsPerCase_lte: Float

  """All values greater than the given value."""
  unitsPerCase_gt: Float

  """All values greater than or equal the given value."""
  unitsPerCase_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  uom: String

  """All values that are not equal to given value."""
  uom_not: String

  """All values that are contained in given list."""
  uom_in: [String!]

  """All values that are not contained in given list."""
  uom_not_in: [String!]

  """All values less than the given value."""
  uom_lt: String

  """All values less than or equal the given value."""
  uom_lte: String

  """All values greater than the given value."""
  uom_gt: String

  """All values greater than or equal the given value."""
  uom_gte: String

  """All values containing the given string."""
  uom_contains: String

  """All values not containing the given string."""
  uom_not_contains: String

  """All values starting with the given string."""
  uom_starts_with: String

  """All values not starting with the given string."""
  uom_not_starts_with: String

  """All values ending with the given string."""
  uom_ends_with: String

  """All values not ending with the given string."""
  uom_not_ends_with: String
  expiry: String

  """All values that are not equal to given value."""
  expiry_not: String

  """All values that are contained in given list."""
  expiry_in: [String!]

  """All values that are not contained in given list."""
  expiry_not_in: [String!]

  """All values less than the given value."""
  expiry_lt: String

  """All values less than or equal the given value."""
  expiry_lte: String

  """All values greater than the given value."""
  expiry_gt: String

  """All values greater than or equal the given value."""
  expiry_gte: String

  """All values containing the given string."""
  expiry_contains: String

  """All values not containing the given string."""
  expiry_not_contains: String

  """All values starting with the given string."""
  expiry_starts_with: String

  """All values not starting with the given string."""
  expiry_not_starts_with: String

  """All values ending with the given string."""
  expiry_ends_with: String

  """All values not ending with the given string."""
  expiry_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  cases: Int

  """All values that are not equal to given value."""
  cases_not: Int

  """All values that are contained in given list."""
  cases_in: [Int!]

  """All values that are not contained in given list."""
  cases_not_in: [Int!]

  """All values less than the given value."""
  cases_lt: Int

  """All values less than or equal the given value."""
  cases_lte: Int

  """All values greater than the given value."""
  cases_gt: Int

  """All values greater than or equal the given value."""
  cases_gte: Int
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  user: UserWhereInput
}

input InvoiceItemWhereUniqueInput {
  id: ID
}

enum InvoiceOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  total_ASC
  total_DESC
  status_ASC
  status_DESC
  pickupDate_ASC
  pickupDate_DESC
  deliveryDate_ASC
  deliveryDate_DESC
}

type InvoicePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  total: Int!
  status: InvoiceStatus!
  pickupDate: String
  deliveryDate: String
}

enum InvoiceStatus {
  DRAFT
  DUE
  PAID
}

type InvoiceSubscriptionPayload {
  mutation: MutationType!
  node: Invoice
  updatedFields: [String!]
  previousValues: InvoicePreviousValues
}

input InvoiceSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [InvoiceSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvoiceSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvoiceSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: InvoiceWhereInput
}

input InvoiceUpdateInput {
  total: Int
  status: InvoiceStatus
  pickupDate: String
  deliveryDate: String
  items: InvoiceItemUpdateManyInput
  user: UserUpdateOneRequiredInput
}

input InvoiceUpdateManyMutationInput {
  total: Int
  status: InvoiceStatus
  pickupDate: String
  deliveryDate: String
}

input InvoiceWhereInput {
  """Logical AND on all given filters."""
  AND: [InvoiceWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvoiceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvoiceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  total: Int

  """All values that are not equal to given value."""
  total_not: Int

  """All values that are contained in given list."""
  total_in: [Int!]

  """All values that are not contained in given list."""
  total_not_in: [Int!]

  """All values less than the given value."""
  total_lt: Int

  """All values less than or equal the given value."""
  total_lte: Int

  """All values greater than the given value."""
  total_gt: Int

  """All values greater than or equal the given value."""
  total_gte: Int
  status: InvoiceStatus

  """All values that are not equal to given value."""
  status_not: InvoiceStatus

  """All values that are contained in given list."""
  status_in: [InvoiceStatus!]

  """All values that are not contained in given list."""
  status_not_in: [InvoiceStatus!]
  pickupDate: String

  """All values that are not equal to given value."""
  pickupDate_not: String

  """All values that are contained in given list."""
  pickupDate_in: [String!]

  """All values that are not contained in given list."""
  pickupDate_not_in: [String!]

  """All values less than the given value."""
  pickupDate_lt: String

  """All values less than or equal the given value."""
  pickupDate_lte: String

  """All values greater than the given value."""
  pickupDate_gt: String

  """All values greater than or equal the given value."""
  pickupDate_gte: String

  """All values containing the given string."""
  pickupDate_contains: String

  """All values not containing the given string."""
  pickupDate_not_contains: String

  """All values starting with the given string."""
  pickupDate_starts_with: String

  """All values not starting with the given string."""
  pickupDate_not_starts_with: String

  """All values ending with the given string."""
  pickupDate_ends_with: String

  """All values not ending with the given string."""
  pickupDate_not_ends_with: String
  deliveryDate: String

  """All values that are not equal to given value."""
  deliveryDate_not: String

  """All values that are contained in given list."""
  deliveryDate_in: [String!]

  """All values that are not contained in given list."""
  deliveryDate_not_in: [String!]

  """All values less than the given value."""
  deliveryDate_lt: String

  """All values less than or equal the given value."""
  deliveryDate_lte: String

  """All values greater than the given value."""
  deliveryDate_gt: String

  """All values greater than or equal the given value."""
  deliveryDate_gte: String

  """All values containing the given string."""
  deliveryDate_contains: String

  """All values not containing the given string."""
  deliveryDate_not_contains: String

  """All values starting with the given string."""
  deliveryDate_starts_with: String

  """All values not starting with the given string."""
  deliveryDate_not_starts_with: String

  """All values ending with the given string."""
  deliveryDate_ends_with: String

  """All values not ending with the given string."""
  deliveryDate_not_ends_with: String
  items_every: InvoiceItemWhereInput
  items_some: InvoiceItemWhereInput
  items_none: InvoiceItemWhereInput
  user: UserWhereInput
}

input InvoiceWhereUniqueInput {
  id: ID
}

type Item implements Node {
  id: ID!
  department: String!
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int!
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int!
  discountPrice: Int
  discountQty: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus!
}

"""A connection to a list of items."""
type ItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ItemEdge]!
  aggregate: AggregateItem!
}

input ItemCreateInput {
  department: String!
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int!
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int!
  discountPrice: Int
  discountQty: Int
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus!
}

input ItemCreateOneInput {
  create: ItemCreateInput
  connect: ItemWhereUniqueInput
}

"""An edge in a connection."""
type ItemEdge {
  """The item at the end of the edge."""
  node: Item!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ItemOrderByInput {
  id_ASC
  id_DESC
  department_ASC
  department_DESC
  barcode_ASC
  barcode_DESC
  brand_ASC
  brand_DESC
  title_ASC
  title_DESC
  location_ASC
  location_DESC
  cases_ASC
  cases_DESC
  buyingLimit_ASC
  buyingLimit_DESC
  casesPerSkid_ASC
  casesPerSkid_DESC
  casesPerRow_ASC
  casesPerRow_DESC
  unitsPerCase_ASC
  unitsPerCase_DESC
  size_ASC
  size_DESC
  uom_ASC
  uom_DESC
  price_ASC
  price_DESC
  discountPrice_ASC
  discountPrice_DESC
  discountQty_ASC
  discountQty_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  expiry_ASC
  expiry_DESC
  comments_ASC
  comments_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  status_ASC
  status_DESC
}

type ItemPreviousValues {
  id: ID!
  department: String!
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int!
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int!
  discountPrice: Int
  discountQty: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus!
}

enum ItemStatus {
  DRAFT
  ACTIVE
  INACTIVE
}

type ItemSubscriptionPayload {
  mutation: MutationType!
  node: Item
  updatedFields: [String!]
  previousValues: ItemPreviousValues
}

input ItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItemSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ItemWhereInput
}

input ItemUpdateDataInput {
  department: String
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int
  discountPrice: Int
  discountQty: Int
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus
}

input ItemUpdateInput {
  department: String
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int
  discountPrice: Int
  discountQty: Int
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus
}

input ItemUpdateManyMutationInput {
  department: String
  barcode: String
  brand: String
  title: String
  location: String
  cases: Int
  buyingLimit: Int
  casesPerSkid: Int
  casesPerRow: Int
  unitsPerCase: Float
  size: Float
  uom: String
  price: Int
  discountPrice: Int
  discountQty: Int
  expiry: String
  comments: String
  image: String
  largeImage: String
  status: ItemStatus
}

input ItemUpdateOneInput {
  create: ItemCreateInput
  connect: ItemWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ItemUpdateDataInput
  upsert: ItemUpsertNestedInput
}

input ItemUpsertNestedInput {
  update: ItemUpdateDataInput!
  create: ItemCreateInput!
}

input ItemWhereInput {
  """Logical AND on all given filters."""
  AND: [ItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  department: String

  """All values that are not equal to given value."""
  department_not: String

  """All values that are contained in given list."""
  department_in: [String!]

  """All values that are not contained in given list."""
  department_not_in: [String!]

  """All values less than the given value."""
  department_lt: String

  """All values less than or equal the given value."""
  department_lte: String

  """All values greater than the given value."""
  department_gt: String

  """All values greater than or equal the given value."""
  department_gte: String

  """All values containing the given string."""
  department_contains: String

  """All values not containing the given string."""
  department_not_contains: String

  """All values starting with the given string."""
  department_starts_with: String

  """All values not starting with the given string."""
  department_not_starts_with: String

  """All values ending with the given string."""
  department_ends_with: String

  """All values not ending with the given string."""
  department_not_ends_with: String
  barcode: String

  """All values that are not equal to given value."""
  barcode_not: String

  """All values that are contained in given list."""
  barcode_in: [String!]

  """All values that are not contained in given list."""
  barcode_not_in: [String!]

  """All values less than the given value."""
  barcode_lt: String

  """All values less than or equal the given value."""
  barcode_lte: String

  """All values greater than the given value."""
  barcode_gt: String

  """All values greater than or equal the given value."""
  barcode_gte: String

  """All values containing the given string."""
  barcode_contains: String

  """All values not containing the given string."""
  barcode_not_contains: String

  """All values starting with the given string."""
  barcode_starts_with: String

  """All values not starting with the given string."""
  barcode_not_starts_with: String

  """All values ending with the given string."""
  barcode_ends_with: String

  """All values not ending with the given string."""
  barcode_not_ends_with: String
  brand: String

  """All values that are not equal to given value."""
  brand_not: String

  """All values that are contained in given list."""
  brand_in: [String!]

  """All values that are not contained in given list."""
  brand_not_in: [String!]

  """All values less than the given value."""
  brand_lt: String

  """All values less than or equal the given value."""
  brand_lte: String

  """All values greater than the given value."""
  brand_gt: String

  """All values greater than or equal the given value."""
  brand_gte: String

  """All values containing the given string."""
  brand_contains: String

  """All values not containing the given string."""
  brand_not_contains: String

  """All values starting with the given string."""
  brand_starts_with: String

  """All values not starting with the given string."""
  brand_not_starts_with: String

  """All values ending with the given string."""
  brand_ends_with: String

  """All values not ending with the given string."""
  brand_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  cases: Int

  """All values that are not equal to given value."""
  cases_not: Int

  """All values that are contained in given list."""
  cases_in: [Int!]

  """All values that are not contained in given list."""
  cases_not_in: [Int!]

  """All values less than the given value."""
  cases_lt: Int

  """All values less than or equal the given value."""
  cases_lte: Int

  """All values greater than the given value."""
  cases_gt: Int

  """All values greater than or equal the given value."""
  cases_gte: Int
  buyingLimit: Int

  """All values that are not equal to given value."""
  buyingLimit_not: Int

  """All values that are contained in given list."""
  buyingLimit_in: [Int!]

  """All values that are not contained in given list."""
  buyingLimit_not_in: [Int!]

  """All values less than the given value."""
  buyingLimit_lt: Int

  """All values less than or equal the given value."""
  buyingLimit_lte: Int

  """All values greater than the given value."""
  buyingLimit_gt: Int

  """All values greater than or equal the given value."""
  buyingLimit_gte: Int
  casesPerSkid: Int

  """All values that are not equal to given value."""
  casesPerSkid_not: Int

  """All values that are contained in given list."""
  casesPerSkid_in: [Int!]

  """All values that are not contained in given list."""
  casesPerSkid_not_in: [Int!]

  """All values less than the given value."""
  casesPerSkid_lt: Int

  """All values less than or equal the given value."""
  casesPerSkid_lte: Int

  """All values greater than the given value."""
  casesPerSkid_gt: Int

  """All values greater than or equal the given value."""
  casesPerSkid_gte: Int
  casesPerRow: Int

  """All values that are not equal to given value."""
  casesPerRow_not: Int

  """All values that are contained in given list."""
  casesPerRow_in: [Int!]

  """All values that are not contained in given list."""
  casesPerRow_not_in: [Int!]

  """All values less than the given value."""
  casesPerRow_lt: Int

  """All values less than or equal the given value."""
  casesPerRow_lte: Int

  """All values greater than the given value."""
  casesPerRow_gt: Int

  """All values greater than or equal the given value."""
  casesPerRow_gte: Int
  unitsPerCase: Float

  """All values that are not equal to given value."""
  unitsPerCase_not: Float

  """All values that are contained in given list."""
  unitsPerCase_in: [Float!]

  """All values that are not contained in given list."""
  unitsPerCase_not_in: [Float!]

  """All values less than the given value."""
  unitsPerCase_lt: Float

  """All values less than or equal the given value."""
  unitsPerCase_lte: Float

  """All values greater than the given value."""
  unitsPerCase_gt: Float

  """All values greater than or equal the given value."""
  unitsPerCase_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  uom: String

  """All values that are not equal to given value."""
  uom_not: String

  """All values that are contained in given list."""
  uom_in: [String!]

  """All values that are not contained in given list."""
  uom_not_in: [String!]

  """All values less than the given value."""
  uom_lt: String

  """All values less than or equal the given value."""
  uom_lte: String

  """All values greater than the given value."""
  uom_gt: String

  """All values greater than or equal the given value."""
  uom_gte: String

  """All values containing the given string."""
  uom_contains: String

  """All values not containing the given string."""
  uom_not_contains: String

  """All values starting with the given string."""
  uom_starts_with: String

  """All values not starting with the given string."""
  uom_not_starts_with: String

  """All values ending with the given string."""
  uom_ends_with: String

  """All values not ending with the given string."""
  uom_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  discountPrice: Int

  """All values that are not equal to given value."""
  discountPrice_not: Int

  """All values that are contained in given list."""
  discountPrice_in: [Int!]

  """All values that are not contained in given list."""
  discountPrice_not_in: [Int!]

  """All values less than the given value."""
  discountPrice_lt: Int

  """All values less than or equal the given value."""
  discountPrice_lte: Int

  """All values greater than the given value."""
  discountPrice_gt: Int

  """All values greater than or equal the given value."""
  discountPrice_gte: Int
  discountQty: Int

  """All values that are not equal to given value."""
  discountQty_not: Int

  """All values that are contained in given list."""
  discountQty_in: [Int!]

  """All values that are not contained in given list."""
  discountQty_not_in: [Int!]

  """All values less than the given value."""
  discountQty_lt: Int

  """All values less than or equal the given value."""
  discountQty_lte: Int

  """All values greater than the given value."""
  discountQty_gt: Int

  """All values greater than or equal the given value."""
  discountQty_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  expiry: String

  """All values that are not equal to given value."""
  expiry_not: String

  """All values that are contained in given list."""
  expiry_in: [String!]

  """All values that are not contained in given list."""
  expiry_not_in: [String!]

  """All values less than the given value."""
  expiry_lt: String

  """All values less than or equal the given value."""
  expiry_lte: String

  """All values greater than the given value."""
  expiry_gt: String

  """All values greater than or equal the given value."""
  expiry_gte: String

  """All values containing the given string."""
  expiry_contains: String

  """All values not containing the given string."""
  expiry_not_contains: String

  """All values starting with the given string."""
  expiry_starts_with: String

  """All values not starting with the given string."""
  expiry_not_starts_with: String

  """All values ending with the given string."""
  expiry_ends_with: String

  """All values not ending with the given string."""
  expiry_not_ends_with: String
  comments: String

  """All values that are not equal to given value."""
  comments_not: String

  """All values that are contained in given list."""
  comments_in: [String!]

  """All values that are not contained in given list."""
  comments_not_in: [String!]

  """All values less than the given value."""
  comments_lt: String

  """All values less than or equal the given value."""
  comments_lte: String

  """All values greater than the given value."""
  comments_gt: String

  """All values greater than or equal the given value."""
  comments_gte: String

  """All values containing the given string."""
  comments_contains: String

  """All values not containing the given string."""
  comments_not_contains: String

  """All values starting with the given string."""
  comments_starts_with: String

  """All values not starting with the given string."""
  comments_not_starts_with: String

  """All values ending with the given string."""
  comments_ends_with: String

  """All values not ending with the given string."""
  comments_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  status: ItemStatus

  """All values that are not equal to given value."""
  status_not: ItemStatus

  """All values that are contained in given list."""
  status_in: [ItemStatus!]

  """All values that are not contained in given list."""
  status_not_in: [ItemStatus!]
}

input ItemWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createCartItem(data: CartItemCreateInput!): CartItem!
  createInvoice(data: InvoiceCreateInput!): Invoice!
  createItem(data: ItemCreateInput!): Item!
  createInvoiceItem(data: InvoiceItemCreateInput!): InvoiceItem!
  createUser(data: UserCreateInput!): User!
  updateCartItem(data: CartItemUpdateInput!, where: CartItemWhereUniqueInput!): CartItem
  updateInvoice(data: InvoiceUpdateInput!, where: InvoiceWhereUniqueInput!): Invoice
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateInvoiceItem(data: InvoiceItemUpdateInput!, where: InvoiceItemWhereUniqueInput!): InvoiceItem
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteCartItem(where: CartItemWhereUniqueInput!): CartItem
  deleteInvoice(where: InvoiceWhereUniqueInput!): Invoice
  deleteItem(where: ItemWhereUniqueInput!): Item
  deleteInvoiceItem(where: InvoiceItemWhereUniqueInput!): InvoiceItem
  deleteUser(where: UserWhereUniqueInput!): User
  upsertCartItem(where: CartItemWhereUniqueInput!, create: CartItemCreateInput!, update: CartItemUpdateInput!): CartItem!
  upsertInvoice(where: InvoiceWhereUniqueInput!, create: InvoiceCreateInput!, update: InvoiceUpdateInput!): Invoice!
  upsertItem(where: ItemWhereUniqueInput!, create: ItemCreateInput!, update: ItemUpdateInput!): Item!
  upsertInvoiceItem(where: InvoiceItemWhereUniqueInput!, create: InvoiceItemCreateInput!, update: InvoiceItemUpdateInput!): InvoiceItem!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyCartItems(data: CartItemUpdateManyMutationInput!, where: CartItemWhereInput): BatchPayload!
  updateManyInvoices(data: InvoiceUpdateManyMutationInput!, where: InvoiceWhereInput): BatchPayload!
  updateManyItems(data: ItemUpdateManyMutationInput!, where: ItemWhereInput): BatchPayload!
  updateManyInvoiceItems(data: InvoiceItemUpdateManyMutationInput!, where: InvoiceItemWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  deleteManyCartItems(where: CartItemWhereInput): BatchPayload!
  deleteManyInvoices(where: InvoiceWhereInput): BatchPayload!
  deleteManyItems(where: ItemWhereInput): BatchPayload!
  deleteManyInvoiceItems(where: InvoiceItemWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  EMPLOYEE
  CUSTOMER
  ADMIN
}

type Query {
  cartItems(where: CartItemWhereInput, orderBy: CartItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CartItem]!
  invoices(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invoice]!
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item]!
  invoiceItems(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InvoiceItem]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  cartItem(where: CartItemWhereUniqueInput!): CartItem
  invoice(where: InvoiceWhereUniqueInput!): Invoice
  item(where: ItemWhereUniqueInput!): Item
  invoiceItem(where: InvoiceItemWhereUniqueInput!): InvoiceItem
  user(where: UserWhereUniqueInput!): User
  cartItemsConnection(where: CartItemWhereInput, orderBy: CartItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CartItemConnection!
  invoicesConnection(where: InvoiceWhereInput, orderBy: InvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceConnection!
  itemsConnection(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ItemConnection!
  invoiceItemsConnection(where: InvoiceItemWhereInput, orderBy: InvoiceItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InvoiceItemConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  cartItem(where: CartItemSubscriptionWhereInput): CartItemSubscriptionPayload
  invoice(where: InvoiceSubscriptionWhereInput): InvoiceSubscriptionPayload
  item(where: ItemSubscriptionWhereInput): ItemSubscriptionPayload
  invoiceItem(where: InvoiceItemSubscriptionWhereInput): InvoiceItemSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  firstName: String!
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String!
  password: String!
  permissions: Permission!
  canOrder: Boolean!
  active: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  cart(where: CartItemWhereInput, orderBy: CartItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CartItem!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  firstName: String!
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String!
  password: String!
  permissions: Permission!
  canOrder: Boolean!
  active: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  cart: CartItemCreateManyWithoutUserInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCartInput {
  create: UserCreateWithoutCartInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCartInput {
  firstName: String!
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String!
  password: String!
  permissions: Permission!
  canOrder: Boolean!
  active: Boolean!
  resetToken: String
  resetTokenExpiry: Float
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  company_ASC
  company_DESC
  email_ASC
  email_DESC
  address_ASC
  address_DESC
  phone_ASC
  phone_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  permissions_ASC
  permissions_DESC
  canOrder_ASC
  canOrder_DESC
  active_ASC
  active_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  firstName: String!
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String!
  password: String!
  permissions: Permission!
  canOrder: Boolean!
  active: Boolean!
  resetToken: String
  resetTokenExpiry: Float
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  firstName: String
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String
  password: String
  permissions: Permission
  canOrder: Boolean
  active: Boolean
  resetToken: String
  resetTokenExpiry: Float
  cart: CartItemUpdateManyWithoutUserInput
}

input UserUpdateInput {
  firstName: String
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String
  password: String
  permissions: Permission
  canOrder: Boolean
  active: Boolean
  resetToken: String
  resetTokenExpiry: Float
  cart: CartItemUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  firstName: String
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String
  password: String
  permissions: Permission
  canOrder: Boolean
  active: Boolean
  resetToken: String
  resetTokenExpiry: Float
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutCartInput {
  create: UserCreateWithoutCartInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCartDataInput
  upsert: UserUpsertWithoutCartInput
}

input UserUpdateWithoutCartDataInput {
  firstName: String
  lastName: String
  company: String
  email: String
  address: String
  phone: String
  username: String
  password: String
  permissions: Permission
  canOrder: Boolean
  active: Boolean
  resetToken: String
  resetTokenExpiry: Float
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutCartInput {
  update: UserUpdateWithoutCartDataInput!
  create: UserCreateWithoutCartInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  company: String

  """All values that are not equal to given value."""
  company_not: String

  """All values that are contained in given list."""
  company_in: [String!]

  """All values that are not contained in given list."""
  company_not_in: [String!]

  """All values less than the given value."""
  company_lt: String

  """All values less than or equal the given value."""
  company_lte: String

  """All values greater than the given value."""
  company_gt: String

  """All values greater than or equal the given value."""
  company_gte: String

  """All values containing the given string."""
  company_contains: String

  """All values not containing the given string."""
  company_not_contains: String

  """All values starting with the given string."""
  company_starts_with: String

  """All values not starting with the given string."""
  company_not_starts_with: String

  """All values ending with the given string."""
  company_ends_with: String

  """All values not ending with the given string."""
  company_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  canOrder: Boolean

  """All values that are not equal to given value."""
  canOrder_not: Boolean
  active: Boolean

  """All values that are not equal to given value."""
  active_not: Boolean
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  cart_every: CartItemWhereInput
  cart_some: CartItemWhereInput
  cart_none: CartItemWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  username: String
}
